/* eslint-disable */

export const AllTypesProps: Record<string,any> = {
	Boolean_comparison_exp:{
		_eq:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		_gt:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		_gte:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		_in:{
			type:"Boolean",
			array:true,
			arrayRequired:false,
			required:true
		},
		_is_null:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		_lt:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		_lte:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		_neq:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		_nin:{
			type:"Boolean",
			array:true,
			arrayRequired:false,
			required:true
		}
	},
	Rooms:{
		Users:{
			distinct_on:{
				type:"Users_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"Users_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"Users_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		Users_aggregate:{
			distinct_on:{
				type:"Users_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"Users_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"Users_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	Rooms_aggregate_fields:{
		count:{
			columns:{
				type:"Rooms_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	Rooms_bool_exp:{
		Users:{
			type:"Users_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_and:{
			type:"Rooms_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"Rooms_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"Rooms_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		createdAt:{
			type:"timestamptz_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"uuid_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	Rooms_constraint: "enum",
	Rooms_insert_input:{
		Users:{
			type:"Users_arr_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		createdAt:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"uuid",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	Rooms_obj_rel_insert_input:{
		data:{
			type:"Rooms_insert_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		on_conflict:{
			type:"Rooms_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	Rooms_on_conflict:{
		constraint:{
			type:"Rooms_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"Rooms_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"Rooms_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	Rooms_order_by:{
		Users_aggregate:{
			type:"Users_aggregate_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		createdAt:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	Rooms_pk_columns_input:{
		id:{
			type:"uuid",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	Rooms_select_column: "enum",
	Rooms_set_input:{
		createdAt:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"uuid",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	Rooms_update_column: "enum",
	String_comparison_exp:{
		_eq:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_gt:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_gte:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_ilike:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_in:{
			type:"String",
			array:true,
			arrayRequired:false,
			required:true
		},
		_iregex:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_is_null:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		_like:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_lt:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_lte:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_neq:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_nilike:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_nin:{
			type:"String",
			array:true,
			arrayRequired:false,
			required:true
		},
		_niregex:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_nlike:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_nregex:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_nsimilar:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_regex:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_similar:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	Users_aggregate_fields:{
		count:{
			columns:{
				type:"Users_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	Users_aggregate_order_by:{
		count:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		max:{
			type:"Users_max_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		min:{
			type:"Users_min_order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	Users_arr_rel_insert_input:{
		data:{
			type:"Users_insert_input",
			array:true,
			arrayRequired:true,
			required:true
		},
		on_conflict:{
			type:"Users_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	Users_bool_exp:{
		Room:{
			type:"Rooms_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_and:{
			type:"Users_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"Users_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"Users_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		card:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"uuid_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		roomId:{
			type:"uuid_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		showingCard:{
			type:"Boolean_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	Users_constraint: "enum",
	Users_insert_input:{
		Room:{
			type:"Rooms_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		card:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"uuid",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		roomId:{
			type:"uuid",
			array:false,
			arrayRequired:false,
			required:false
		},
		showingCard:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	Users_max_order_by:{
		card:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		roomId:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	Users_min_order_by:{
		card:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		roomId:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	Users_on_conflict:{
		constraint:{
			type:"Users_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"Users_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"Users_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	Users_order_by:{
		Room:{
			type:"Rooms_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		card:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		roomId:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		showingCard:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	Users_pk_columns_input:{
		id:{
			type:"uuid",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	Users_select_column: "enum",
	Users_set_input:{
		card:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"uuid",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		roomId:{
			type:"uuid",
			array:false,
			arrayRequired:false,
			required:false
		},
		showingCard:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	Users_update_column: "enum",
	mutation_root:{
		delete_Rooms:{
			where:{
				type:"Rooms_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_Rooms_by_pk:{
			id:{
				type:"uuid",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_Users:{
			where:{
				type:"Users_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_Users_by_pk:{
			id:{
				type:"uuid",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		insert_Rooms:{
			objects:{
				type:"Rooms_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"Rooms_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_Rooms_one:{
			object:{
				type:"Rooms_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"Rooms_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_Users:{
			objects:{
				type:"Users_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"Users_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_Users_one:{
			object:{
				type:"Users_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"Users_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		update_Rooms:{
			_set:{
				type:"Rooms_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"Rooms_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_Rooms_by_pk:{
			_set:{
				type:"Rooms_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"Rooms_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_Users:{
			_set:{
				type:"Users_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"Users_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_Users_by_pk:{
			_set:{
				type:"Users_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"Users_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		}
	},
	order_by: "enum",
	query_root:{
		Rooms:{
			distinct_on:{
				type:"Rooms_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"Rooms_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"Rooms_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		Rooms_aggregate:{
			distinct_on:{
				type:"Rooms_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"Rooms_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"Rooms_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		Rooms_by_pk:{
			id:{
				type:"uuid",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		Users:{
			distinct_on:{
				type:"Users_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"Users_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"Users_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		Users_aggregate:{
			distinct_on:{
				type:"Users_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"Users_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"Users_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		Users_by_pk:{
			id:{
				type:"uuid",
				array:false,
				arrayRequired:false,
				required:true
			}
		}
	},
	subscription_root:{
		Rooms:{
			distinct_on:{
				type:"Rooms_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"Rooms_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"Rooms_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		Rooms_aggregate:{
			distinct_on:{
				type:"Rooms_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"Rooms_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"Rooms_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		Rooms_by_pk:{
			id:{
				type:"uuid",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		Users:{
			distinct_on:{
				type:"Users_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"Users_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"Users_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		Users_aggregate:{
			distinct_on:{
				type:"Users_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"Users_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"Users_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		Users_by_pk:{
			id:{
				type:"uuid",
				array:false,
				arrayRequired:false,
				required:true
			}
		}
	},
	timestamptz: "String",
	timestamptz_comparison_exp:{
		_eq:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		_gt:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		_gte:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		_in:{
			type:"timestamptz",
			array:true,
			arrayRequired:false,
			required:true
		},
		_is_null:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		_lt:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		_lte:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		_neq:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		_nin:{
			type:"timestamptz",
			array:true,
			arrayRequired:false,
			required:true
		}
	},
	uuid: "String",
	uuid_comparison_exp:{
		_eq:{
			type:"uuid",
			array:false,
			arrayRequired:false,
			required:false
		},
		_gt:{
			type:"uuid",
			array:false,
			arrayRequired:false,
			required:false
		},
		_gte:{
			type:"uuid",
			array:false,
			arrayRequired:false,
			required:false
		},
		_in:{
			type:"uuid",
			array:true,
			arrayRequired:false,
			required:true
		},
		_is_null:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		_lt:{
			type:"uuid",
			array:false,
			arrayRequired:false,
			required:false
		},
		_lte:{
			type:"uuid",
			array:false,
			arrayRequired:false,
			required:false
		},
		_neq:{
			type:"uuid",
			array:false,
			arrayRequired:false,
			required:false
		},
		_nin:{
			type:"uuid",
			array:true,
			arrayRequired:false,
			required:true
		}
	}
}

export const ReturnTypes: Record<string,any> = {
	cached:{
		ttl:"Int",
		refresh:"Boolean"
	},
	Rooms:{
		Users:"Users",
		Users_aggregate:"Users_aggregate",
		createdAt:"timestamptz",
		id:"uuid",
		name:"String"
	},
	Rooms_aggregate:{
		aggregate:"Rooms_aggregate_fields",
		nodes:"Rooms"
	},
	Rooms_aggregate_fields:{
		count:"Int",
		max:"Rooms_max_fields",
		min:"Rooms_min_fields"
	},
	Rooms_max_fields:{
		createdAt:"timestamptz",
		id:"uuid",
		name:"String"
	},
	Rooms_min_fields:{
		createdAt:"timestamptz",
		id:"uuid",
		name:"String"
	},
	Rooms_mutation_response:{
		affected_rows:"Int",
		returning:"Rooms"
	},
	Users:{
		Room:"Rooms",
		card:"String",
		id:"uuid",
		name:"String",
		roomId:"uuid",
		showingCard:"Boolean"
	},
	Users_aggregate:{
		aggregate:"Users_aggregate_fields",
		nodes:"Users"
	},
	Users_aggregate_fields:{
		count:"Int",
		max:"Users_max_fields",
		min:"Users_min_fields"
	},
	Users_max_fields:{
		card:"String",
		id:"uuid",
		name:"String",
		roomId:"uuid"
	},
	Users_min_fields:{
		card:"String",
		id:"uuid",
		name:"String",
		roomId:"uuid"
	},
	Users_mutation_response:{
		affected_rows:"Int",
		returning:"Users"
	},
	mutation_root:{
		delete_Rooms:"Rooms_mutation_response",
		delete_Rooms_by_pk:"Rooms",
		delete_Users:"Users_mutation_response",
		delete_Users_by_pk:"Users",
		insert_Rooms:"Rooms_mutation_response",
		insert_Rooms_one:"Rooms",
		insert_Users:"Users_mutation_response",
		insert_Users_one:"Users",
		update_Rooms:"Rooms_mutation_response",
		update_Rooms_by_pk:"Rooms",
		update_Users:"Users_mutation_response",
		update_Users_by_pk:"Users"
	},
	query_root:{
		Rooms:"Rooms",
		Rooms_aggregate:"Rooms_aggregate",
		Rooms_by_pk:"Rooms",
		Users:"Users",
		Users_aggregate:"Users_aggregate",
		Users_by_pk:"Users"
	},
	subscription_root:{
		Rooms:"Rooms",
		Rooms_aggregate:"Rooms_aggregate",
		Rooms_by_pk:"Rooms",
		Users:"Users",
		Users_aggregate:"Users_aggregate",
		Users_by_pk:"Users"
	}
}